const { VK, Keyboard } = require('vk-io');
const { HearManager } = require('@vk-io/hear');
const SteamAPI = require('steamapi');
const SteamID = require('steamid');
const moment = require('moment');
const mysql = require(`mysql-await`);
const fs = require('fs');
var admins = require('./admins.json');
var bans = require('./bans.json');
var cfg = require('./cfg.json');
const msg = new HearManager;
const steam = new SteamAPI(cfg.steamToken);
const pool1 = mysql.createPool(cfg.adminwatchAndBansDB);
const pool2 = mysql.createPool(cfg.gamecmsDB);
const isProd = false;
var admtimer = false;
var vk = isProd ? new VK({ token: cfg.vkTokenProd }) : new VK({ token: cfg.vkTokenDev });

start();

vk.updates.use(async (message, next) => {
    if (message.isGroup || message.isOutbox || !message.isChat || message.is(['chat_kick_user'])) return;
    console.log(`[${await getFirstName(message.senderId)} | ${message.senderId} | ${moment().local().format("DD.MM.YYYY HH:mm")}]:${message.text}`);
    await next();
});
vk.updates.on('message_new', msg.middleware);
vk.updates.on('message_new', (message) => {
    if (message.hasMessagePayload) {
        if (message.messagePayload == 'mystats') getStats(message);
        if (message.messagePayload.event == 'confirmban') confirmBan(message);
        if (message.messagePayload.event == 'rejectban') rejectBan(message);
    }
});

msg.hear(/^!–Ω–æ–≤—ã–π\s*([^\s]*)\s*([^\s]*)\s*([^\s]*)\s*(.*)$/i, async (message) => {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    if (!message.$match[4] || isNaN(Number(message.$match[3]))) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–Ω–æ–≤—ã–π @—Å—Å—ã–ª–∫–∞ [—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∏–º] [–∏–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∞–π—Ç–µ] [–¥–∏—Å–∫–æ—Ä–¥]`);
    try {
        var sid = await steam.resolve(message.$match[2]);
    } catch {
        return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–Ω–æ–≤—ã–π @—Å—Å—ã–ª–∫–∞ [—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∏–º] [–∏–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∞–π—Ç–µ] [–¥–∏—Å–∫–æ—Ä–¥]`);
    }
    if (getCurrentAdm(message) != undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ –∑–∞–Ω–µ—Å–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö`);
    admins.push({
        id: Number(message.$match[1].slice(3, message.$match[1].indexOf('|'))),
        uid: admins[admins.length - 1].uid + 1,
        gcmsid: Number(message.$match[3]),
        job: "–•–µ–ª–ø–µ—Ä",
        date: moment().format("DD.MM.YYYY"),
        cash: 30,
        vigs: {
            count: 0,
            notes: []
        },
        preds: {
            count: 0,
            notes: []
        },
        bans: 0,
        offbans: 0,
        steamid: sid,
        discord: message.$match[4],
        inactive: "",
        specadm: false,
        verified: false,
        access: false,
        notes: ""
    });
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
    var currentAdm = admins.find(x => x.id === Number(message.$match[1].slice(3, message.$match[1].indexOf('|'))));
    var sid2 = new SteamID(sid);
    sid2 = sid2.getSteam2RenderedID(true);
    var nick = await getSteamNickname(currentAdm.steamid);
    const connection1 = await pool1.awaitGetConnection();
    const connection2 = await pool2.awaitGetConnection();
    var res = [0, 0, 0, 0, 0];
    var reasons = ["sb_admins", "sb_admins_servers_groups", "gcms admins", "gcms admins__services", "gcms users"];
    var text = ``;
    try {
        await connection1.awaitBeginTransaction();
        await connection2.awaitBeginTransaction();
        await connection1.awaitQuery('SET NAMES utf8');
        await connection2.awaitQuery('SET NAMES utf8');
        var args1 = [nick, sid2, "1fcc1a43dfb4a474abb925f54e65f426e932b59e", 0, "", 0, 87, "Helper", "", null, 0, "", "", ""];
        res[0] = await connection1.awaitQuery('INSERT INTO sb_admins (user,authid,password,gid,email,extraflags,immunity,srv_group,srv_flags,srv_password,expired,skype,comment,vk) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)', args1);
        var last = await connection1.awaitQuery('SELECT * FROM sb_admins ORDER BY aid DESC LIMIT 1');
        var args2 = [last[0].aid, 1, -1, 1];
        res[1] = await connection1.awaitQuery('INSERT INTO sb_admins_servers_groups(admin_id, group_id, srv_group_id, server_id) VALUES (?,?,?,?)', args2);
        var args3 = [sid2, "", "", "ce", 1, message.$match[3]];
        res[2] = await connection2.awaitQuery('INSERT INTO admins (name, pass, pass_md5, type, server, user_id) VALUES (?, ?, ?, ?, ?, ?)', args3);
        var last = await connection2.awaitQuery('SELECT * FROM admins ORDER BY id DESC LIMIT 1');
        var args4 = [last[0].id, 4, 52, moment().format("YYYY-MM-DD HH:mm:ss"), "0000-00-00 00:00:00", 0, 0];
        res[3] = await connection2.awaitQuery('INSERT INTO admins__services (admin_id, service, service_time, bought_date, ending_date, irretrievable, previous_group) VALUES (?, ?, ?, ?, ?, ?, ?)', args4);
        res[4] = await connection2.awaitQuery('UPDATE users SET rights = 18 WHERE id = ? LIMIT 1', message.$match[3]);
        await connection1.awaitCommit();
        await connection2.awaitCommit();
    } catch {
        text = `‚ùå –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${nick} –ø—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏`;
        for (i = 0; i < res.length; i++) {
            text += res[i] ? ` (${reasons[i]} - ${res[i].affectedRows}/1)` : ` (${reasons[i]} - 0/1)`
        };
        await connection1.awaitRollback();
        await connection2.awaitRollback();
    }
    if (text[0] != '‚ùå') text = `‚úî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${nick} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω`;
    message.send(text);
    connection1.release();
    connection2.release();
});

msg.hear(/^(?:!–∫–æ–º–∞–Ω–¥—ã)$/i, async (message) => {
    if (getCurrentAdm(message.senderId).access) message.send(`üìù –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ —Å–æ—Å—Ç–∞–≤–∞:\n!—Å—Ç–∞—Ç—É—Å - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞\n!–∫–æ–º–∞–Ω–¥—ã - –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n!–∞–¥–º–∏–Ω—ã - —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n!—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ @—Å—Å—ã–ª–∫–∞ - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n!–Ω–∞–∫–∞–∑–∞–Ω–∏—è @—Å—Å—ã–ª–∫–∞ - –≤—ã–≤–æ–¥–∏—Ç –Ω–∞–∫–∞–∑–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n!–ø—Ä–æ–≤–µ—Ä–µ–Ω @—Å—Å—ã–ª–∫–∞ - –ø–æ–º–µ—á–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã–º\n!–Ω–æ–≤—ã–π @—Å—Å—ã–ª–∫–∞ [—Å—Ç–∏–º] [–∏–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∞–π—Ç–µ] [–¥–∏—Å–∫–æ—Ä–¥] - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n!–¥–æ–ª–∂–Ω–æ—Å—Ç—å @—Å—Å—ã–ª–∫–∞ [–¥–æ–ª–∂–Ω–æ—Å—Ç—å] - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏\n!–Ω–µ–∞–∫—Ç–∏–≤ @—Å—Å—ã–ª–∫–∞ [–∫–æ–ª-–≤–æ –¥–Ω–µ–π] - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n!–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ @—Å—Å—ã–ª–∫–∞ [–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ] - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n!–±–∞–ª–ª—ã @—Å—Å—ã–ª–∫–∞ [–∫–æ–ª-–≤–æ] - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤\n!–≤—ã–≥–æ–≤–æ—Ä @—Å—Å—ã–ª–∫–∞ [1-2] [–ø—Ä–∏—á–∏–Ω–∞] - –≤—ã–¥–∞—á–∞ –≤—ã–≥–æ–≤–æ—Ä–∞\n!–ø—Ä–µ–¥ @—Å—Å—ã–ª–∫–∞ [1-2] [–ø—Ä–∏—á–∏–Ω–∞] - –≤—ã–¥–∞—á–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n!—Å–Ω—è—Ç—å–≤—ã–≥ @—Å—Å—ã–ª–∫–∞ [1-3] - —Å–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞\n!—Å–Ω—è—Ç—å–ø—Ä–µ–¥ @—Å—Å—ã–ª–∫–∞ [1-2] - —Å–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n!—Å–Ω—è—Ç—å @—Å—Å—ã–ª–∫–∞ - —Å–Ω—è—Ç–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n!–æ—Ñ—Ñ–±–∞–Ω [—Å—Ç–∏–º] [—Å—Ä–æ–∫ –≤ –º–∏–Ω—É—Ç–∞—Ö] [–ø—Ä–∏—á–∏–Ω–∞] - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –±–∞–Ω –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è\n`);
    else message.send(`üìù –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n!—Å—Ç–∞—Ç—É—Å - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞\n!–∫–æ–º–∞–Ω–¥—ã - –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n!–∞–¥–º–∏–Ω—ã - –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n!—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ @—Å—Å—ã–ª–∫–∞ - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n!–Ω–∞–∫–∞–∑–∞–Ω–∏—è @—Å—Å—ã–ª–∫–∞ - –≤—ã–≤–æ–¥–∏—Ç –Ω–∞–∫–∞–∑–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n!–æ—Ñ—Ñ–±–∞–Ω [—Å—Ç–∏–º] [—Å—Ä–æ–∫ –≤ –º–∏–Ω—É—Ç–∞—Ö] [–ø—Ä–∏—á–∏–Ω–∞] - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –±–∞–Ω –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è\n!—Å–Ω—è—Ç—å–≤—ã–≥ @—Å—Å—ã–ª–∫–∞ [1-3] - —Å–Ω—è—Ç–∏–µ –≤—ã–≥–æ–≤–æ—Ä–∞\n!—Å–Ω—è—Ç—å–ø—Ä–µ–¥ @—Å—Å—ã–ª–∫–∞ [1-2] - —Å–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è`);
});

msg.hear(/^(?:!–∞–¥–º–∏–Ω—ã)$/i, async (message) => {
    cfg.startTime = + new Date;
    if (!getCurrentAdm(message.senderId).access && admtimer == true) return message.send(`‚ö† –°–ª–µ–¥—É—é—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ ${moment.utc(moment.duration(cfg.endTime - cfg.startTime).asMilliseconds()).format('HH:mm:ss')}`);
    var admSteamIds = [];
    var sozdatel = zam = kurator = administrator = moderator = helper = "";
    for (var i = 0; i < admins.length; i++) {
        admSteamIds[i] = admins[i].steamid;
    }
    var admData = await steam.getUserSummary(admSteamIds);
    for (var i = 0; i < admins.length; i++) {
        var verif = admins[i].verified ? "‚úî" : "üö®";
        var currentAdmData = admData.find(x => admins[i].steamid == x.steamID);
        var nick = admins[i].uid == 4 ? currentAdmData.nickname.replaceAll("$", "") : currentAdmData.nickname;
        switch (admins[i].job) {
            case "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä": administrator += `[ ${verif} ${admins[i].job} - [id${admins[i].id}|${nick}] ]  [ ${admins[i].vigs.count}/3 ] [ ${admins[i].preds.count}/3 ] [ ${admins[i].cash} ]\n`; break;
            case "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä": moderator += `[ ${verif} ${admins[i].job} - [id${admins[i].id}|${nick}] ]  [ ${admins[i].vigs.count}/3 ] [ ${admins[i].preds.count}/3 ] [ ${admins[i].cash} ]\n`; break;
            case "–•–µ–ª–ø–µ—Ä": helper += `[ ${verif} ${admins[i].job} - [id${admins[i].id}|${nick}] ]  [ ${admins[i].vigs.count}/3 ] [ ${admins[i].preds.count}/3 ] [ ${admins[i].cash} ]\n`; break;
            case "–ö—É—Ä–∞—Ç–æ—Ä": kurator += `[ ${verif} ${admins[i].job} - [id${admins[i].id}|${nick}] ]  [ ${admins[i].vigs.count}/3 ] [ ${admins[i].preds.count}/3 ] [ ${admins[i].cash} ]\n`; break;
            case "–°–æ–∑–¥–∞—Ç–µ–ª—å": sozdatel += `[ ${verif} ${admins[i].job} - [id${admins[i].id}|${nick}] ]  [ ${admins[i].vigs.count}/3 ] [ ${admins[i].preds.count}/3 ] [ ${admins[i].cash} ]\n`; break;
            case "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å —Å–æ–∑–¥–∞—Ç–µ–ª—è": zam += `[ ${verif} ${admins[i].job} - [id${admins[i].id}|${nick}] ]  [ ${admins[i].vigs.count}/3 ] [ ${admins[i].preds.count}/3 ] [ ${admins[i].cash} ]\n`; break;
        }
    }
    message.send({
        message: `üìù –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n` + sozdatel + zam + kurator + administrator + moderator + helper + `üíæ –í—Å–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ - ${admins.length}`,
        disable_mentions: 1
    });
    cfg.startTime = + new Date;
    cfg.endTime = cfg.startTime + 7200000;
    admtimer = true;
    setTimeout(() => admtimer = false, 72000000);
    fs.writeFileSync('./cfg.json', JSON.stringify(cfg, null, '\t'));
});

msg.hear(/^(?:!—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)\s*(.*)$/i, async (message) => {
    await getStats(message);
});

msg.hear(/^(?:!–Ω–∞–∫–∞–∑–∞–Ω–∏—è)\s*(.*)$/i, async (message) => {
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    if (currentAdm.vigs.notes[0] == undefined && currentAdm.preds.notes[0] == undefined) return message.send(`‚úî –£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${await getSteamNickname(currentAdm.steamid)} –Ω–µ—Ç –Ω–∞–∫–∞–∑–∞–Ω–∏–π`)
    text = `üìù –ù–∞–∫–∞–∑–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${await getSteamNickname(currentAdm.steamid)}:\n`;
    var i = 0;
    if (currentAdm.vigs.notes[0] == undefined) text += `‚õî –í—ã–≥–æ–≤–æ—Ä–æ–≤ –Ω–µ—Ç\n`;
    else {
        text += `‚õî –í—ã–≥–æ–≤–æ—Ä—ã:\n`;
        for (var nts of currentAdm.vigs.notes) {
            if (nts == "") continue;
            i++;
            text += `${i}. ${nts}\n`;
        }
    }
    if (currentAdm.preds.notes[0] == undefined) text += `‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –Ω–µ—Ç`;
    else {
        text += `‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:\n`
        i = 0;
        for (var nts of currentAdm.preds.notes) {
            if (nts == "") continue;
            i++;
            text += `${i}. ${nts}\n`;
        }
    }
    message.send(text);
});

msg.hear(/^(?:!–æ—Ñ—Ñ–±–∞–Ω)\s*([^\s]*)\s*(\d*)\s*(.*)$/i, async (message) => {
    try {
        var sid64 = await steam.resolve(message.$match[1]);
    } catch {
        return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–æ—Ñ—Ñ–±–∞–Ω [—Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∏–º] [—Å—Ä–æ–∫ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö] [–ø—Ä–∏—á–∏–Ω–∞]`);
    }
    if (!message.$match[3] || isNaN(Number(message.$match[2]))) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–æ—Ñ—Ñ–±–∞–Ω [—Å—Ç–∏–º] [—Å—Ä–æ–∫ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö] [–ø—Ä–∏—á–∏–Ω–∞]`);
    getCurrentAdm(message.senderId);
    var count = bans[bans.length - 1].id + 1;
    var sid2 = new SteamID(sid64);
    sid2 = sid2.getSteam2RenderedID(true);
    bans.push({
        id: count,
        adminId: currentAdm.uid,
        status: 0,
        steam2id: sid2,
        length: Number(message.$match[2]),
        reason: message.$match[3]
    });
    const builder = Keyboard.builder()
        .textButton({
            label: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
            payload: {
                event: 'confirmban',
                id: count
            },
            color: Keyboard.POSITIVE_COLOR
        })
        .textButton({
            label: '–û—Ç–∫–ª–æ–Ω–∏—Ç—å',
            payload: {
                event: 'rejectban',
                id: count
            },
            color: Keyboard.NEGATIVE_COLOR
        });
    message.send(`‚è≥ –û—Ñ—Ñ–±–∞–Ω (ID: ${count}) –∑–∞–ø–∏—Å–∞–Ω. –û–∂–∏–¥–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è`);
    message.send({
        message: `‚ö† –ó–∞—è–≤–∫–∞ –Ω–∞ –æ—Ñ—Ñ–±–∞–Ω (ID: ${count}) –æ—Ç ${await getSteamNickname(currentAdm.steamid)}:\n–ù–∏–∫: ${await getSteamNickname(sid64)}\n–°—Ä–æ–∫: ${message.$match[2]}\n–ü—Ä–∏—á–∏–Ω–∞: ${message.$match[3]}\n[id190628413|–ú–∞–∫—Å–∏–º]`,
        keyboard: builder.inline(),
        chat_id: cfg.headAdminsChatId
    });
    fs.writeFileSync('./bans.json', JSON.stringify(bans, null, '\t'));;
});

msg.hear(/^(?:!–¥–æ–ª–∂–Ω–æ—Å—Ç—å)\s*([^\s]*)\s*(.*)$/i, async (message) => {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    if (!message.$match[2] && !message.hasReplyMessage) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–¥–æ–ª–∂–Ω–æ—Å—Ç—å @—Å—Å—ã–ª–∫–∞ [–¥–æ–ª–∂–Ω–æ—Å—Ç—å] –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !–¥–æ–ª–∂–Ω–æ—Å—Ç—å [–¥–æ–ª–∂–Ω–æ—Å—Ç—å]`);
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    currentAdm.job = message.$match[1].substring(0, 3) == '[id' ? message.$match[2] : message.$match[1] + ' ' + message.$match[2];
    message.send(`üíº –î–æ–ª–∂–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${await getSteamNickname(currentAdm.steamid)} –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${currentAdm.job}`);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!–ø—Ä–æ–≤–µ—Ä–µ–Ω)\s*(.*)$/i, async (message) => {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    if (!message.$match[1] && !message.hasReplyMessage) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–ø—Ä–æ–≤–µ—Ä–µ–Ω @—Å—Å—ã–ª–∫–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !–Ω–µ–∞–∫—Ç–∏–≤`);
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    currentAdm.verified = true;
    message.send(`‚úî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${await getSteamNickname(currentAdm.steamid)} –ø—Ä–æ–≤–µ—Ä–µ–Ω`);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!–Ω–µ–∞–∫—Ç–∏–≤)\s*([^\s]*)\s*([\d\s]*)$/i, async (message) => {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    var days = message.$match[1].substring(0, 3) == '[id' ? message.$match[2] : message.$match[1];
    if (!message.$match[2] && !message.hasReplyMessage || isNaN(Number(days))) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–Ω–µ–∞–∫—Ç–∏–≤ @—Å—Å—ã–ª–∫–∞ [–∫–æ–ª-–≤–æ –¥–Ω–µ–π] –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !–Ω–µ–∞–∫—Ç–∏–≤ [–∫–æ–ª-–≤–æ –¥–Ω–µ–π]`);
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    currentAdm.inactive = moment().add(days, 'days').format("DD.MM.YYYY");
    message.send(`üîú –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${await getSteamNickname(currentAdm.steamid)} —É—à–µ–ª –≤ –Ω–µ–∞–∫—Ç–∏–≤ –¥–æ ${currentAdm.inactive}`);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ)\s*([^\s]*)\s*(.*)$/i, async (message) => {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    if (!message.$match[2] && !message.hasReplyMessage) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ @—Å—Å—ã–ª–∫–∞ [–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ] –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ [–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ]`);
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    currentAdm.notes = message.$match[1].substring(0, 3) == '[id' ? message.$match[2] : message.$match[1] + ' ' + message.$match[2];
    message.send(`üìí –ò–∑–º–µ–Ω–µ–Ω–æ –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${await getSteamNickname(currentAdm.steamid)}: ${currentAdm.notes}`);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!–±–∞–ª–ª—ã)\s*([^\s]*)\s*([-\d]*)$/i, async (message) => {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    var value = message.$match[1].substring(0, 3) == '[id' ? Number(message.$match[2]) : Number(message.$match[1]);
    if (!message.$match[2] && !message.hasReplyMessage || isNaN(Number(value))) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–±–∞–ª–ª—ã @—Å—Å—ã–ª–∫–∞ [–∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤] –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !–±–∞–ª–ª—ã [–∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤]`);
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    message.send(`‚úî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${await getSteamNickname(currentAdm.steamid)}:\n–ë—ã–ª–æ: ${currentAdm.cash}\n–°—Ç–∞–ª–æ: ${currentAdm.cash += value}`);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!–≤—ã–≥–æ–≤–æ—Ä)\s*([^\s]*)\s*([\d]*)\s*(.*)$/i, async (message) => {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    var value = message.$match[1].substring(0, 3) == '[id' ? Number(message.$match[2]) : Number(message.$match[1]);
    if (!message.$match[3] && !message.hasReplyMessage || isNaN(Number(value)) || value >= 3) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–≤—ã–≥–æ–≤–æ—Ä @—Å—Å—ã–ª–∫–∞ [1-2] [–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ] –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !–≤—ã–≥–æ–≤–æ—Ä [1-2] [–ø—Ä–∏–º–µ—á–∞–Ω–∏–µ]`);
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    if (currentAdm.vigs.count + value >= 4) return message.send(`‚ö† –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ–ª—å—à–µ 3 –≤—ã–≥–æ–≤–æ—Ä–æ–≤`);
    var reason = message.$match[1].substring(0, 3) == '[id' ? message.$match[3] : message.$match[2];
    var today = moment().format("DD.MM.YYYY");
    var text = value == 1 ? '–≤—ã–¥–∞–Ω –≤—ã–≥–æ–≤–æ—Ä' : `–≤—ã–¥–∞–Ω–æ 2 –≤—ã–≥–æ–≤–æ—Ä–∞`;
    for (var i = 0; i < value; i++) {
        currentAdm.vigs.notes.unshift(reason + ` (${today})`);
        currentAdm.vigs.count++;
    }
    message.send(`‚õî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${await getSteamNickname(currentAdm.steamid)} ${text} c –ø—Ä–∏—á–∏–Ω–æ–π: ${reason}`);
    if (currentAdm.vigs.count == 3) message.send(`‚ö† –£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${await getSteamNickname(currentAdm.steamid)} 3 –≤—ã–≥–æ–≤–æ—Ä–∞`);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!–ø—Ä–µ–¥)\s*([^\s]*)\s*([\d]*)\s*(.*)$/i, async (message) => {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    var value = message.$match[1].substring(0, 3) == '[id' ? Number(message.$match[2]) : Number(message.$match[1]);
    if (!message.$match[3] && !message.hasReplyMessage || isNaN(value) || value >= 3) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !–ø—Ä–µ–¥ @—Å—Å—ã–ª–∫–∞ [1-2] [–ø—Ä–∏—á–∏–Ω–∞] –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !–ø—Ä–µ–¥ [1-2] [–ø—Ä–∏—á–∏–Ω–∞]`);
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    if (currentAdm.vigs.count == 2 && currentAdm.preds.count + value >= 4) return message.send(`‚ö† –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ–ª—å—à–µ 3 –≤—ã–≥–æ–≤–æ—Ä–æ–≤`);
    var reason = message.$match[1].substring(0, 3) == '[id' ? message.$match[3] : message.$match[2];
    var today = moment().format("DD.MM.YYYY");
    var text = value == 1 ? '–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ' : `2 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è`;
    for (var i = 0; i < value; i++) {
        currentAdm.preds.notes.unshift(reason + ` (${today})`);
        currentAdm.preds.count++;
    }
    message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${await getSteamNickname(currentAdm.steamid)} ${text} —Å –ø—Ä–∏—á–∏–Ω–æ–π: ${reason}`);
    if (currentAdm.preds.count >= 3) {
        for (var i = 0; i < 3; i++) {
            currentAdm.preds.notes[--currentAdm.preds.count] += " (–ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ –≤—ã–≥–æ–≤–æ—Ä)";
        }
        currentAdm.vigs.notes.unshift(`–ó–∞ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (${today})`);
        currentAdm.vigs.count++;
        message.send(`‚õî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${await getSteamNickname(currentAdm.steamid)} –≤—ã–¥–∞–Ω –≤—ã–≥–æ–≤–æ—Ä –∑–∞ 3 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è`);
    }
    if (currentAdm.vigs.count == 3) message.send(`‚ö† –£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${await getSteamNickname(currentAdm.steamid)} 3 –≤—ã–≥–æ–≤–æ—Ä–∞`);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!—Å–Ω—è—Ç—å–≤—ã–≥)\s*([^\s]*)\s*(.*)$/i, async (message) => {
    var value = message.$match[1].substring(0, 3) == '[id' ? Number(message.$match[2]) : Number(message.$match[1]);
    if (isNaN(Number(value))) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !—Å–Ω—è—Ç—å–≤—ã–≥ @—Å—Å—ã–ª–∫–∞ [1-3] –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !—Å–Ω—è—Ç—å–≤—ã–≥ [1-3]`);
    if (!getCurrentAdm(message.senderId).access && currentAdm.id != message.senderId) return message.send("‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –≤—ã–≥–æ–≤–æ—Ä –¥—Ä—É–≥–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    if (currentAdm.vigs.count < value) return message.send(`‚ö† –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –±–æ–ª—å—à–µ –≤—ã–≥–æ–≤–æ—Ä–æ–≤, —á–µ–º –µ—Å—Ç—å`);
    if (currentAdm.cash < 200 * value) return message.send(`‚ö† –£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${await getSteamNickname(currentAdm.steamid)} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è —Å–Ω—è—Ç–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è`);
    var today = moment().format("DD.MM.YYYY");
    var text = value == 1 ? '—Å–Ω—è—Ç –≤—ã–≥–æ–≤–æ—Ä' : `—Å–Ω—è—Ç–æ ${value} –≤—ã–≥–æ–≤–æ—Ä–∞`;
    for (var i = 0; i < value; i++) {
        currentAdm.cash -= 200;
        currentAdm.vigs.notes[--currentAdm.vigs.count] += ` (—Å–Ω—è—Ç ${today})`;
    }
    message.send(`‚úî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${await getSteamNickname(currentAdm.steamid)} ${text}. –û—Å—Ç–∞—Ç–æ–∫ ${currentAdm.cash} –±–∞–ª–ª–æ–≤`);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!—Å–Ω—è—Ç—å–ø—Ä–µ–¥)\s*([^\s]*)\s*(.*)$/i, async (message) => {
    var value = message.$match[1].substring(0, 3) == '[id' ? Number(message.$match[2]) : Number(message.$match[1]);
    if (isNaN(Number(value))) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !—Å–Ω—è—Ç—å–ø—Ä–µ–¥ @—Å—Å—ã–ª–∫–∞ [1-2] –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !—Å–Ω—è—Ç—å–ø—Ä–µ–¥ [1-2]`);
    if (!getCurrentAdm(message.senderId).access && currentAdm.id != message.senderId) return message.send("‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥—Ä—É–≥–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    if (currentAdm.preds.count < value) return message.send(`‚ö† –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –±–æ–ª—å—à–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –∞–¥–º–∏–Ω—Å—Ç—Ä–∞—Ç–æ—Ä—É, —á–µ–º —É –Ω–µ–≥–æ –µ—Å—Ç—å`);
    if (currentAdm.cash < 120 * value) return message.send(`‚ö† –£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${await getSteamNickname(currentAdm.steamid)} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è —Å–Ω—è—Ç–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è`);
    var today = moment().format("DD.MM.YYYY");
    var text = value == 1 ? '–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ' : `${value} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è`;
    for (var i = 0; i < value; i++) {
        currentAdm.cash -= 120;
        currentAdm.preds.notes[--currentAdm.preds.count] += ` (—Å–Ω—è—Ç–æ ${today})`;
    }
    message.send(`‚úî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${await getSteamNickname(currentAdm.steamid)} —Å–Ω—è—Ç–æ ${text}. –û—Å—Ç–∞—Ç–æ–∫ ${currentAdm.cash} –±–∞–ª–ª–æ–≤`);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!—Å–Ω—è—Ç—å)\s*(.*)$/i, async (message) => {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    if (!message.$match[1] && !message.hasReplyMessage) return message.send(`‚ö† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !—Å–Ω—è—Ç—å @—Å—Å—ã–ª–∫–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π !—Å–Ω—è—Ç—å`);
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    var text = ``;
    var res = [0, 0, 0, 0, 0, 0, 0, 0];
    var reasons = ["sb_admins", "sb_admins_servers_groups", "adminwatch", "gcms admins", "gcms admins__services", "gcms users", "json", "chat"];
    var nick = await getSteamNickname(currentAdm.steamid);
    var sid2 = new SteamID(currentAdm.steamid);
    sid2 = sid2.getSteam2RenderedID().slice(10);
    const connection1 = await pool1.awaitGetConnection();
    const connection2 = await pool2.awaitGetConnection();
    try {
        await connection1.awaitBeginTransaction();
        await connection2.awaitBeginTransaction();
        var admData = await connection1.awaitQuery('SELECT * FROM sb_admins WHERE authid LIKE \'%?%\'', Number(sid2));
        res[0] = await connection1.awaitQuery('DELETE FROM sb_admins WHERE authid LIKE \'%?%\'', Number(sid2));
        if (admData.length != 0) res[1] = await connection1.awaitQuery('DELETE FROM sb_admins_servers_groups WHERE admin_id = ?', admData[0].aid);
        res[2] = await connection1.awaitQuery('DELETE FROM adminwatch WHERE steam LIKE \'%?%\'', Number(sid2));
        var admData = await connection2.awaitQuery('SELECT * FROM admins WHERE name LIKE \'%?%\'', Number(sid2));
        res[3] = await connection2.awaitQuery('DELETE FROM admins WHERE name LIKE \'%?%\'', Number(sid2));
        if (admData.length != 0) res[4] = await connection2.awaitQuery('DELETE FROM admins__services WHERE admin_id = ?', admData[0].id);
        res[5] = await connection2.awaitQuery('UPDATE users SET rights = 25 WHERE id = ? LIMIT 1', currentAdm.gcmsid);
        res[6] = currentAdm.uid == admins.splice(admins.indexOf(currentAdm), 1)[0].uid ? res[6] = 1 : res[6] = 0;
        await connection1.awaitCommit();
        await connection2.awaitCommit();
    } catch { }
    connection1.release();
    connection2.release();
    try {
        await vk.api.messages.removeChatUser({
            chat_id: cfg.adminsChatId,
            user_id: currentAdm.id
        });
        res[7] = 1;
    } catch { }
    if (res[0].affectedRows == 0 || res[1].affectedRows == 0 || res[2].affectedRows == 0 || res[3].affectedRows == 0 || res[4].affectedRows == 0 || res[5].affectedRows == 0 || res[6] == 0 || res[7] == 0) {
        text = `‚ùå –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${nick} –ø—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏:`;
        for (i = 0; i < res.length - 2; i++) {
            try {
                text += res[i].affectedRows ? ` (${reasons[i]} - ${res[i].affectedRows}/1)` : ` (${reasons[i]} - 0/1)`;
            } catch {
                text += ` (${reasons[i]} - -/1)`;
            }
        }
        text += res[6] ? ` (${reasons[6]} - 1/1)` : ` (${reasons[6]} - 0/1)`;
        text += res[7] ? ` (${reasons[7]} - 1/1)` : ` (${reasons[7]} - 0/1)`;
    } else {
        text = `‚úî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${nick} —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç`;
        for (i = 0; i < res.length - 2; i++) {
            try {
                text += res[i].affectedRows ? ` (${reasons[i]} - ${res[i].affectedRows}/1)` : ` (${reasons[i]} - 0/1)`;
            } catch {
                text += ` (${reasons[i]} - -/1)`;
            }
        }
        text += res[6] ? ` (${reasons[6]} - 1/1)` : ` (${reasons[6]} - 0/1)`;
        text += res[7] ? ` (${reasons[7]} - 1/1)` : ` (${reasons[7]} - 0/1)`;
    }
    message.send(text);
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
});

msg.hear(/^(?:!—Å—Ç–∞—Ç—É—Å)$/i, async (message) => {
    message.send(`‚úî –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω`);
});

function start() {
    vk.updates.start();
    console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");
    weekResults();
    setInterval(() => weekResults(), 3600000);
}

function getCurrentAdm(arg) {
    if (arg.id != undefined) {
        if (arg.$match != undefined) if (arg.$match[1].substring(0, 3) == '[id' && !arg.hasReplyMessage) return currentAdm = admins.find(x => x.id === Number(arg.$match[1].slice(3, arg.$match[1].indexOf('|'))));
        if (arg.hasReplyMessage) return currentAdm = admins.find(x => x.id === arg.replyMessage.senderId);
        else return currentAdm = admins.find(x => x.id === arg.senderId);
    }
    if (typeof arg == 'number') return currentAdm = admins.find(x => x.id === arg);
    else return currentAdm = admins.find(x => x.id === Number(arg.slice(3, arg.indexOf('|'))));
}

async function getStats(message) {
    const builder = Keyboard.builder()
        .textButton({
            label: '–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
            payload: 'mystats',
            color: Keyboard.SECONDARY_COLOR
        });
    if (getCurrentAdm(message) == undefined) return message.send(`‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö`);
    var s2id = new SteamID(currentAdm.steamid);
    s2id = s2id.getSteam2RenderedID().slice(10);
    const connection = await pool1.awaitGetConnection();
    var admOnline = await connection.awaitQuery('SELECT * FROM adminwatch WHERE steam LIKE \'%?%\'', Number(s2id));
    connection.release();
    var played = admOnline[0]?.played ?? 0;
    played = moment.utc(played * 1000).format("HH:mm:ss");
    var a = moment(currentAdm.date, "DD-MM-YYYY");
    var b = moment(moment().format("DD-MM-YYYY"), "DD-MM-YYYY");
    var c = moment(currentAdm.inactive, "DD-MM-YYYY");
    var admData = await steam.getUserSummary(currentAdm.steamid);
    var verf = currentAdm.verified ? "‚úî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–µ–Ω" : "üö® –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω";
    var note = currentAdm.notes == "" || currentAdm.notes == " " ? "üìí –ü—Ä–∏–º–µ—á–∞–Ω–∏–π –Ω–µ—Ç" : `üìí –ü—Ä–∏–º–µ—á–∞–Ω–∏—è: ${currentAdm.notes}`;
    var activity = c.diff(b, 'days') > 0 ? `üîú –ù–µ–∞–∫—Ç–∏–≤ –¥–æ: ${currentAdm.inactive} (${c.diff(b, 'days')} days remained)` : `üñ• –ê–∫—Ç–∏–≤–µ–Ω`;
    message.send({
        message: `üìù –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–µ:\nüë§ –ò–º—è: [id${currentAdm.id}|${await getFirstName(currentAdm.id)}]\nüåê Steam: ${admData.nickname} - ${admData.url}\nüéÆ Discord: ${currentAdm.discord}\nüíº –î–æ–ª–∂–Ω–æ—Å—Ç—å: ${currentAdm.job}\nüìÖ –î–∞—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: ${currentAdm.date} (${b.diff(a, 'days')} days)\n${verf}\n\nüìù –ù–∞–∫–∞–∑–∞–Ω–∏—è –∏ –±–∞–ª–ª—ã\n‚õî –í—ã–≥–æ–≤–æ—Ä–æ–≤: [${currentAdm.vigs.count}/3]\n‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: [${currentAdm.preds.count}/3]\nüí≤ –ë–∞–ª–ª–æ–≤: ${currentAdm.cash}\nüö´ –ë–∞–Ω–æ–≤: ${currentAdm.bans}\n\n${activity}\nüïí –û–Ω–ª–∞–π–Ω: ${played}\n${note}`,
        disable_mentions: 1,
        keyboard: builder
    });
}

async function rejectBan(message) {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    var currentBan = bans[message.messagePayload.id - 1];
    if (currentBan.status == 2 || currentBan.status == 1) return message.send(`‚ö† –û—Ñ—Ñ–±–∞–Ω (ID: ${currentBan.id}) —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω`);
    currentBan.status = 2;
    message.send({
        message: `‚ùå –û—Ñ—Ñ–±–∞–Ω (ID: ${currentBan.id}) –æ—Ç–∫–ª–æ–Ω–µ–Ω`,
        chat_id: cfg.adminsChatId
    });
    fs.writeFileSync('./bans.json', JSON.stringify(bans, null, '\t'));;
}

async function confirmBan(message) {
    if (!getCurrentAdm(message.senderId).access) return message.send(`‚õî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è`);
    var currentBan = bans[message.messagePayload.id - 1];
    if (currentBan.status == 2 || currentBan.status == 1) return message.send(`‚ö† –û—Ñ—Ñ–±–∞–Ω (ID: ${currentBan.id}) —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω`);
    var time = Math.floor(new Date().getTime() / 1000);
    var sid64 = new SteamID(currentBan.steam2id);
    sid64 = sid64.getSteamID64();
    var name = await getSteamNickname(sid64);
    var args = [time, 0, currentBan.steam2id, name, time + currentBan.length * 1000, currentBan.length, currentBan.reason, 0, 'STEAM_ID_SERVER', 1];
    const connection = await pool1.awaitGetConnection();
    await connection.awaitQuery('SET NAMES utf8');
    var res = await connection.awaitQuery('INSERT INTO sb_bans(created, type, authid, name, ends, length, reason, aid, adminIp, sid) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', args);
    connection.release();
    console.log(res);
    var currentAdm = admins.find(x => x.uid === currentBan.adminId);
    currentAdm.offbans++;
    currentAdm.bans++;
    currentBan.status = 1;
    message.send({
        message: `‚úî –û—Ñ—Ñ–±–∞–Ω (ID: ${currentBan.id}) –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, –∏–≥—Ä–æ–∫ –∑–∞–±–∞–Ω–µ–Ω`,
        chat_id: cfg.adminsChatId
    });
    fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
    fs.writeFileSync('./bans.json', JSON.stringify(bans, null, '\t'));
}

async function weekResults() {
    var currentTime = + new Date;
    if (currentTime - cfg.endWeek < 604800000) return;
    console.log(currentTime + " –ò—Ç–æ–≥–∏ –æ–Ω–ª–∞–π–Ω–∞");
    var admOnlines = [];
    var bInfo = [];
    var text = `‚åö –ò—Ç–æ–≥–∏ –æ–Ω–ª–∞–π–Ω–∞:\n\n`;
    const connection = await pool1.awaitGetConnection();
    var dbOnlines = await connection.awaitQuery('SELECT * FROM adminwatch');
    for (i = 0; i < dbOnlines.length; i++) {
        var admData = dbOnlines[i];
        var sid64 = new SteamID(admData.steam);
        sid64 = sid64.getSteamID64();
        var currentAdm = admins.find(x => x.steamid === sid64);
        if (currentAdm == undefined || currentAdm.specadm) continue;
        admOnlines.push({
            uid: currentAdm.uid,
            played: admData.played
        });
    }
    admOnlines.sort(function (a, b) { return a.played - b.played; });
    admOnlines.reverse();
    for (i = 0; i < admOnlines.length; i++) {
        var currentOnline = admOnlines[i];
        var currentAdm = admins.find(x => x.uid === currentOnline.uid);
        var timeToCash = Math.floor(currentOnline.played / 3600) * 5 - 15;
        if (i == 0) {
            text += `ü•á [ [id${currentAdm.id}|${await getSteamNickname(currentAdm.steamid)}] ] [ ${moment.utc(currentOnline.played * 1000).format("HH:mm:ss")} ] [ ${timeToCash} –±–∞–ª–ª–æ–≤ ]\n`;
            if (currentOnline.played * 1000 >= 18000000) {
                text += `–ü—Ä–∏–∑ - VIP –Ω–∞ 7 –¥–Ω–µ–π + 70 –±–∞–ª–ª–æ–≤\n`;
                currentAdm.cash += 70;
            }
        } else if (i == 1) {
            text += `ü•à [ [id${currentAdm.id}|${await getSteamNickname(currentAdm.steamid)}] ] [ ${moment.utc(currentOnline.played * 1000).format("HH:mm:ss")} ] [ ${timeToCash} –±–∞–ª–ª–æ–≤ ]\n`;
            if (currentOnline.played * 1000 >= 18000000) {
                text += `–ü—Ä–∏–∑ - VIP –Ω–∞ 3 –¥–Ω—è + 50 –±–∞–ª–ª–æ–≤\n`;
                currentAdm.cash += 50;
            }
        } else if (i == 2) {
            text += `ü•â [ [id${currentAdm.id}|${await getSteamNickname(currentAdm.steamid)}] ] [ ${moment.utc(currentOnline.played * 1000).format("HH:mm:ss")} ] [ ${timeToCash} –±–∞–ª–ª–æ–≤ ]\n`;
            if (currentOnline.played * 1000 >= 18000000) {
                text += `–ü—Ä–∏–∑ - VIP –Ω–∞ 1 –¥–µ–Ω—å + 30 –±–∞–ª–ª–æ–≤\n`;
                currentAdm.cash += 30;
            }
        } else if ((timeToCash + 15) / 5 < 3) {
            text += `‚ùó [ [id${currentAdm.id}|${await getSteamNickname(currentAdm.steamid)}] ] [ ${moment.utc(currentOnline.played * 1000).format("HH:mm:ss")} ] [ ${timeToCash} –±–∞–ª–ª–æ–≤ ]\n`;
        } else {
            text += `‚úî [id${currentAdm.id}|${await getSteamNickname(currentAdm.steamid)}] ] [ ${moment.utc(currentOnline.played * 1000).format("HH:mm:ss")} ] [ ${timeToCash} –±–∞–ª–ª–æ–≤ ]\n`;
        }
        currentAdm.cash += timeToCash;
    }
    text += `\nüö´ –ë–∞–Ω—ã:\n\n`
    var dbans = await connection.awaitQuery('SELECT * FROM sb_bans WHERE created > ?', Math.floor(cfg.endWeek / 1000));
    for (i = 0; i < dbans.length; i++) {
        try {
            var sid64 = new SteamID(dbans[i].adminIp);
        } catch {
            continue;
        }
        sid64 = sid64.getSteamID64();
        var currentAdm = admins.find(x => x.steamid === sid64);
        if (currentAdm != undefined && !bInfo.find(x => x.uid === currentAdm.uid)) {
            bInfo.push({
                uid: currentAdm.uid,
                count: 1
            });
        } else if (currentAdm != undefined && bInfo.find(x => x.uid === currentAdm.uid)) {
            var currentbInfo = bInfo.find(x => x.uid === currentAdm.uid);
            currentbInfo.count++;
        };
    }
    cfg.endWeek += 604800000;
    bInfo.sort(function (a, b) { return a.count - b.count; });
    bInfo.reverse();
    for (i = 0; i < bInfo.length; i++) {
        var currentAdm = admins.find(x => x.uid === bInfo[i].uid);
        var pcash = Math.round(bInfo[i].count * 2 / 5) * 5;
        currentAdm.cash += pcash;
        currentAdm.bans += bInfo[i].count;
        text += `[ ${await getSteamNickname(currentAdm.steamid)} ] [ ${bInfo[i].count} —à—Ç ] [ ${pcash} –±–∞–ª–ª–æ–≤ ]\n`;
    }
    if (admins.filter(x => x.offbans > 0) != 0) {
        text += `\nüö´ –û—Ñ—Ñ–±–∞–Ω—ã:\n\n`;
        for (i = 0; i < admins.length; i++) {
            var currentAdm = admins[i];
            if (currentAdm.offbans == 0) continue;
            currentAdm.cash += currentAdm.offbans * 5;
            text += `[ ${await getSteamNickname(currentAdm.steamid)} ] [ ${currentAdm.offbans} —à—Ç ] [ ${currentAdm.offbans * 5} –±–∞–ª–ª–æ–≤ ]\n`;
            currentAdm.offbans = 0;
        }
    } else text += `\n‚õî –û—Ñ—Ñ–±–∞–Ω–æ–≤ –Ω–µ—Ç\n\n`;
    if (isProd) {
        var dbans = await connection.awaitQuery('UPDATE adminwatch SET total = 0, played = 0');
        fs.writeFileSync('./admins.json', JSON.stringify(admins, null, '\t'));
    }
    fs.writeFileSync('./cfg.json', JSON.stringify(cfg, null, '\t'));
    connection.release();
    text += ('\n‚åö –û–Ω–ª–∞–π–Ω —Å–±—Ä–æ—à–µ–Ω');
    await vk.api.messages.send({
        message: text,
        disable_mentions: 1,
        chat_id: cfg.adminsChatId,
        random_id: Math.floor(Math.random() * 2147483647)
    });
}

async function getSteamNickname(arg) {
    return await steam.getUserSummary(arg).then(summary => { return summary.nickname; });
}

async function getFirstName(arg) {
    return await vk.api.users.get({ user_ids: arg }).then(res => { return res[0].first_name });
}